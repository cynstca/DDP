-- DQL Tasks

-- 1) How many orders were received for products with a category_id = 2
SELECT count(*) FROM `orders` where `category_id` = 2


-- 2) How many orders were received with a category_id of either 2, 4, or 5
SELECT count(*) FROM `orders` where `category_id` in (2,4,5) 

-- 3) How many order are there with a price over Â£35.00 

SELECT count(*) FROM `orders` where `price`>35.00

-- 4) How many orders are there where the customer has a date of birth before 1st January 1980 and want to receive the newsletter

SELECT count(*) FROM `orders` WHERE `date_of_birth` < 1980-01-01 AND newsletter=1

-- 5)  How many customers named Davenport placed orders?

SELECT count(*) FROM `orders` WHERE `customer_surname` = "Davenport"

-- 6) Which customer with a firstname starting with 'Br', had the most orders

SELECT concat(`customer_firstname`, ' ', `customer_surname`) AS 'Name' FROM `orders` where price=(select max(`price`)from orders where`customer_firstname` like 'Br%' )

-- 7) List all orders with products from category 3 by order of price, highest first.

SELECT * FROM `orders` WHERE `category_id` =3 order by `price`DESC

-- 8) Select the following fields from all orders (trans_date, price, promo_code) renaming the colum (field) headings ('Transaction Date', 'Price' & 'Promotion Code')

SELECT `trans_date` AS'Transaction Date', `price`AS'Price', `promo_code` AS'Promotion Code' FROM `orders`

-- 9) Select the following fields (customer_surname, customer_firstname, county) from all orders, with customer names in a single field named 'Customer Name' and in the format <Surname>, <Firstname>, with surname capitalised.  The county field is to be renamed 'County'.

SELECT concat(`customer_surname`,`customer_firstname` ) AS 'Name' ,`county` as 'County'from orders 


-- 10)	Select the average price, minimum price & maximum price for each category.

SELECT `category_id`,AVG(`price`), MIN(`price`), MAX(`price`) FROM `orders` GROUP BY `category_id`

-- 11) 	Select the category_name (labelled 'Category', number of sales (labelled 'Total Orders') & total sales (labelled 'Total Sales') for each category.

SELECT `category_name` AS'Category', count(*)AS'Total Orders', cast( sum(`price`) AS DECIMAL (19, 2) ) AS'Total Sales' 
FROM `orders` right join `categories` 
on  (`orders`.`category_id` = `categories`.`id`)
group by`category_name`

-- 12) 	List all orders with the following fields (with the labls given) orders.trans_date('Transaction Date'), categories.category_name('Category'), orders.customer_surname('Surname'), orders.customer_firstname('Firstname'), orders.price('Order Price'), categories.category_name('Category'), promotions.discount('Discounted by') 

select `trans_date`as'Transaction Date',`category_name`as'Category',`customer_surname`as'Surname',`customer_firstname`as'Firstname',`price`as'Order Price',`discount`as'Discounted by'
from( `orders`left join`categories`on(`orders`.`category_id` = `categories`.`id`))left join`promotions`on`orders`.`promo_code`=`promotions`.`code`

